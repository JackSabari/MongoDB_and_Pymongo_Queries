

5) Create a new collection which consists of students who scored below average and above 40% in all the categories.


Working Query :
~~~~~~~~~~~~~

db.grades.aggregate( [{ $unwind:{path:"$scores"} },
{$lookup:
{
   from: "performances",
   let: { type: "$scores.type",score:"$scores.score" },
   pipeline: [
   { $match:
   { $expr:
   { $and: [ { $eq: [ "$_id",  "$$type" ] },{ $lt: [  "$$score","$average" ] },{ $gt:[ "$$score",40 ]}]}}},
   { $project: { name: 1, _id: 1 } }],
   as: "belowAvg"
   }},
    { $project:{ Below_Average:{$ne: ["$belowAvg", [] ] } ,_id:1,name:1}},
    { $match :{ "Below_Average" : true }},
    { $group: { _id: "$_id", count: { $count: {} } } },{$match:{"count":{$gte:3} }},{$sort:{"_id":1}},
    {$lookup:
    {
    from:"grades",
    localField:"_id",
    foreignField:"_id",
    as:"BelowAvg_and_pass"
    }},    
    { $project:{ _id:0,count:0,"BelowAvg_and_pass.scores":0 } },
    { $out : { db: "student", coll: "below_average_and_pass" } }
])

